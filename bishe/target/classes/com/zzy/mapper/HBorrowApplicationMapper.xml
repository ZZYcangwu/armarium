<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzy.mapper.HBorrowApplicationMapper">
  <resultMap id="BaseResultMap" type="com.zzy.pojo.HBorrowApplication">
    <!--@mbg.generated-->
    <!--@Table h_borrow_application-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status_id" jdbcType="INTEGER" property="statusId" />
    <result column="explain" jdbcType="VARCHAR" property="explain" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, department_id, reason, `type`, create_time, status_id, `explain`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from h_borrow_application
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from h_borrow_application
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zzy.pojo.HBorrowApplication">
    <!--@mbg.generated-->
    insert into h_borrow_application (id, department_id, reason, 
      `type`, create_time, status_id, 
      `explain`)
    values (#{id,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{statusId,jdbcType=INTEGER}, 
      #{explain,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zzy.pojo.HBorrowApplication">
    <!--@mbg.generated-->
    insert into h_borrow_application
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="statusId != null">
        status_id,
      </if>
      <if test="explain != null">
        `explain`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statusId != null">
        #{statusId,jdbcType=INTEGER},
      </if>
      <if test="explain != null">
        #{explain,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzy.pojo.HBorrowApplication">
    <!--@mbg.generated-->
    update h_borrow_application
    <set>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statusId != null">
        status_id = #{statusId,jdbcType=INTEGER},
      </if>
      <if test="explain != null">
        `explain` = #{explain,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzy.pojo.HBorrowApplication">
    <!--@mbg.generated-->
    update h_borrow_application
    set department_id = #{departmentId,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status_id = #{statusId,jdbcType=INTEGER},
      `explain` = #{explain,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update h_borrow_application
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="department_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.departmentId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="reason = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.reason,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`type` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.type,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="status_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.statusId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="`explain` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.explain,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update h_borrow_application
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="department_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.departmentId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.departmentId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="reason = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.reason != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.reason,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="`type` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.type != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.type,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="status_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.statusId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.statusId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="`explain` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.explain != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.explain,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into h_borrow_application
    (id, department_id, reason, `type`, create_time, status_id, `explain`)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.departmentId,jdbcType=INTEGER}, #{item.reason,jdbcType=VARCHAR}, 
        #{item.type,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.statusId,jdbcType=INTEGER}, 
        #{item.explain,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.zzy.pojo.HBorrowApplication">
    <!--@mbg.generated-->
    insert into h_borrow_application
    (id, department_id, reason, `type`, create_time, status_id, `explain`)
    values
    (#{id,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{statusId,jdbcType=INTEGER}, 
      #{explain,jdbcType=VARCHAR})
    on duplicate key update 
    id = #{id,jdbcType=INTEGER}, 
    department_id = #{departmentId,jdbcType=INTEGER}, 
    reason = #{reason,jdbcType=VARCHAR}, 
    `type` = #{type,jdbcType=VARCHAR}, 
    create_time = #{createTime,jdbcType=TIMESTAMP}, 
    status_id = #{statusId,jdbcType=INTEGER}, 
    `explain` = #{explain,jdbcType=VARCHAR}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.zzy.pojo.HBorrowApplication">
    <!--@mbg.generated-->
    insert into h_borrow_application
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="statusId != null">
        status_id,
      </if>
      <if test="explain != null">
        `explain`,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statusId != null">
        #{statusId,jdbcType=INTEGER},
      </if>
      <if test="explain != null">
        #{explain,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statusId != null">
        status_id = #{statusId,jdbcType=INTEGER},
      </if>
      <if test="explain != null">
        `explain` = #{explain,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>